#!/usr/bin/env python3
"""
Script de ejemplo para usar el extractor de commits de GitHub
============================================================

Este script demuestra c√≥mo usar la clase SlackGitHubExtractor
para procesar un archivo JSON de Slack espec√≠fico.
"""

from slack_github_extractor import SlackGitHubExtractor
import os

def main():
    """
    Funci√≥n principal del script de ejemplo
    """
    # Ruta al archivo JSON (ajusta esta ruta seg√∫n tu archivo)
    json_file = "2025-09-30.json"
    
    # Verificar que el archivo existe
    if not os.path.exists(json_file):
        print(f"Error: El archivo {json_file} no existe en el directorio actual.")
        print("Aseg√∫rate de que el archivo JSON est√© en el mismo directorio que este script.")
        return
    
    try:
        print("Iniciando extracci√≥n de commits de GitHub desde Slack...")
        print(f"Procesando archivo: {json_file}")
        
        # Crear instancia del extractor
        extractor = SlackGitHubExtractor(json_file)
        
        # Procesar el archivo y generar reporte
        excel_path, summary = extractor.process("reporte_commits_github.xlsx")
        
        # Mostrar resultados
        print("\n" + "="*50)
        print("RESULTADOS DEL PROCESAMIENTO")
        print("="*50)
        
        if summary.get('total_commits', 0) > 0:
            print(f"‚úÖ Commits extra√≠dos exitosamente: {summary['total_commits']}")
            print(f"üìÅ Repositorios encontrados: {summary['total_repositories']}")
            print(f"üë§ Autores √∫nicos: {summary['total_authors']}")
            
            print(f"\nüìä Distribuci√≥n por repositorio:")
            for repo, count in summary.get('commits_by_repo', {}).items():
                print(f"   ‚Ä¢ {repo}: {count} commits")
            
            print(f"\nüë• Distribuci√≥n por autor:")
            for author, count in summary.get('commits_by_author', {}).items():
                print(f"   ‚Ä¢ {author}: {count} commits")
            
            print(f"\nüìÑ Archivo Excel generado: {excel_path}")
            print("\nEl archivo Excel contiene 3 hojas:")
            print("   1. Todos_los_Commits - Lista completa de commits")
            print("   2. Resumen_por_Repositorio - Estad√≠sticas por repo")
            print("   3. Resumen_por_Autor - Estad√≠sticas por autor")
        else:
            print("‚ö†Ô∏è  No se encontraron commits de GitHub en el archivo JSON")
            print("   Verifica que el archivo contenga notificaciones de GitHub")
        
        print("="*50)
        
    except FileNotFoundError:
        print(f"‚ùå Error: No se pudo encontrar el archivo {json_file}")
    except Exception as e:
        print(f"‚ùå Error durante el procesamiento: {e}")

if __name__ == "__main__":
    main()